
<% #= @values %>
<% #= @schema %>

<div
	class="definition-renderer <%= @size %>"
	data-controller="definition-renderer"

	<% if @conversation_key %>
	data-conversation-key="<%= @conversation_key %>"
	<% end %>

	<% if @message_key %>
		data-message-key="<%= @message_key %>"
	<% end %>

	data-location="<%= @location %>"

	<% if @app_package %>
	data-path="<%= app_package_path(@app.key, @app_package) %>">
	<% end %>

	<form
		data-definition-renderer-target="form"
		data-kind="<%= @blocks[:kind] %>"
		data-location-nonon="<%= @location %>"
		data-action="submit->definition-renderer#onSubmit">

		<fieldset <%= @disabled? "disabled" : "" %>>

			<% if @frame %>
				<input type="hidden" name="message[frame]" value="<%= @frame %>">
			<% end %>

			<% if @conversation_key %>
				<input type="hidden" name="message[conversation_key]" value="<%= @conversation_key %>">
			<% end %>

			<% if @message_key %>
				<input type="hidden" name="message[message_key]" value="<%= @message_key %>">
			<% end %>

			<% if @bot_id %>
				<input type="hidden" name="message[bot_id]" value="<%= @bot_id %>">
			<% end %>

			<% if @bot_step_id %>
				<input type="hidden" name="message[bot_step_id]" value="<%= @bot_step_id %>">
			<% end %>

			<% if @bot_path_id %>
				<input type="hidden" name="message[bot_path_id]" value="<%= @bot_path_id %>">
			<% end %>

			<input type="hidden" name="message[location]" value="<%= @location %>">
			<input type="hidden" name="message[category]" value="<%= @category %>">

			<% @schema.each do |item| %>
				<%= case item["type"]
					when "text"
						render PadderRenderer::Component.new(size: @size  ) do
							render TextRenderer::Component.new(
								text: item['text'],
								align: item['align'],
								style: item['style']
							)
						end
					when "list" then render ListRenderer::Component.new(
						field: item['items'],
					)
					when "image" then render ImageRenderer::Component.new(
						url: item['url'],
						height: item['height'],
						width: item['width'],
						align: item['align'],
						rounded: item['rounded']
					)
					when "button"
						render PadderRenderer::Component.new(size: @size) do
							render ButtonRenderer::Component.new(
								id: item['id'],
								variant: item['variant'] || 'default',
								label: item['label'],
								action: item['action'],
								size: @size || item['size'],
								align: item['align'],
								frame: @frame
							)
						end
					when "data-table"
						render PadderRenderer::Component.new(size: @size) do
							render DataTableRenderer::Component.new(
								id: item['id'],
								items: item['items'],
								size: @size || item['size']
							)
						end
					when "content" 
						render ContentRenderer::Component.new(
							id: item['id'],
							values: {values: @values}.to_json,
							path: content_app_package_path(
								@app.key, @app_package, location: @location, ctx: @ctx
							)
						)
					when "input"
						render PadderRenderer::Component.new(size: @size  ) do
							render InputRenderer::Component.new(
								id: item['id'],
								placeholder: item['placeholder'],
								errors: item['errors'],
								label: item['label'],
								save_state: item['save_state'],
								value: item['value'],
								action: item['action'],
								disabled: item['disabled'],
								loading: item['loading'],
								name: item['name'],
								hint: item['hint'],
								size: @size || item['size']
							)
						end
					when "textarea"
						render PadderRenderer::Component.new(size: @size  ) do
							render TextAreaRenderer::Component.new(
								id: item['id'],
								placeholder: item['placeholder'],
								errors: item['errors'],
								label: item['label'],
								save_state: item['save_state'],
								value: item['value'],
								disabled: item['disabled'],
								loading: item['loading'],
								name: item['name'],
								hint: item['hint'],
								size: @size || item['size']
							)
						end
					when "hidden"
						render PadderRenderer::Component.new(size: @size) do
							render HiddenFieldRenderer::Component.new(
								id: item['id'],
								value: item['value'],
								name: item['name']
							)
						end
					when "spacer"
						render SpacerRenderer::Component.new(size: item["size"])
					when "separator"
						render SeparatorRenderer::Component.new()
					when "frame"
						render FrameRenderer::Component.new(url: item["url"])
					when "dropdown"
						render PadderRenderer::Component.new(size: @size) do
							render DropdownRenderer::Component.new(
								id: item["id"],
								variant: item["variant"],
								align: item["align"],
								label: item["label"],
								value: item["value"],
								options: item["options"],
								direction: item["direction"]
								)
						end
					when "checkbox"
						render PadderRenderer::Component.new(size: @size) do
							render CheckboxRenderer::Component.new(
								id: item["id"],
								type: item["type"],
								text: item["text"],
								options: item["options"],
								save_state: item['save_state'],
								value: item['value'],
								disabled: item['disabled'],
							)
						end
					else

					"---- no definition for #{item["type"]} #{item}--- \n"

					end %>

			<% end %>

		</fieldset>
	</form>
</div>


